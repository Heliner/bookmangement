<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cqut.bookmangement.mapper.BookInfoMapper">
    <resultMap id="BaseResultMap" type="cn.cqut.bookmangement.entity.BookInfo">
        <constructor>
            <idArg column="book_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="book_name" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="author" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="translator" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="price" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="isbn_code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="come_up_time" javaType="java.util.Date" jdbcType="DATE"/>
            <arg column="publish_company" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="state" javaType="java.lang.Integer" jdbcType="INTEGER"/>
            <arg column="entering_men" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="entering_date" javaType="java.util.Date" jdbcType="DATE"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        book_id, book_name, author, translator, price, isbn_code, come_up_time, publish_company,
    state, entering_men, entering_date
    </sql>
    <select id="selectByExample" parameterType="cn.cqut.bookmangement.entity.BookInfoExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from bookinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from bookinfo
        where book_id = #{bookId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from bookinfo
    where book_id =
        #{bookId,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="cn.cqut.bookmangement.entity.BookInfo">
        insert into bookinfo (book_id, book_name, author,
                              translator, price, isbn_code,
                              come_up_time, publish_company, state,
                              entering_men, entering_date)
        values (#{bookId,jdbcType=VARCHAR}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
                #{translator,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, #{isbnCode,jdbcType=VARCHAR},
                #{comeUpTime,jdbcType=DATE}, #{publishCompany,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER},
                #{enteringMen,jdbcType=VARCHAR}, #{enteringDate,jdbcType=DATE})
    </insert>
    <insert id="insertSelective" parameterType="cn.cqut.bookmangement.entity.BookInfo">
        insert into bookinfo
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="bookId != null">
                book_id,
            </if>
            <if test="bookName != null">
                book_name,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="translator != null">
                translator,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="isbnCode != null">
                isbn_code,
            </if>
            <if test="comeUpTime != null">
                come_up_time,
            </if>
            <if test="publishCompany != null">
                publish_company,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="enteringMen != null">
                entering_men,
            </if>
            <if test="enteringDate != null">
                entering_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="bookId != null">
                #{bookId,jdbcType=VARCHAR},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="translator != null">
                #{translator,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="isbnCode != null">
                #{isbnCode,jdbcType=VARCHAR},
            </if>
            <if test="comeUpTime != null">
                #{comeUpTime,jdbcType=DATE},
            </if>
            <if test="publishCompany != null">
                #{publishCompany,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=INTEGER},
            </if>
            <if test="enteringMen != null">
                #{enteringMen,jdbcType=VARCHAR},
            </if>
            <if test="enteringDate != null">
                #{enteringDate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.cqut.bookmangement.entity.BookInfoExample"
            resultType="java.lang.Long">
        select count(*) from bookinfo
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByPrimaryKeySelective" parameterType="cn.cqut.bookmangement.entity.BookInfo">
        update bookinfo
        <set>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="translator != null">
                translator = #{translator,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="isbnCode != null">
                isbn_code = #{isbnCode,jdbcType=VARCHAR},
            </if>
            <if test="comeUpTime != null">
                come_up_time = #{comeUpTime,jdbcType=DATE},
            </if>
            <if test="publishCompany != null">
                publish_company = #{publishCompany,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="enteringMen != null">
                entering_men = #{enteringMen,jdbcType=VARCHAR},
            </if>
            <if test="enteringDate != null">
                entering_date = #{enteringDate,jdbcType=DATE},
            </if>
        </set>
        where book_id = #{bookId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.cqut.bookmangement.entity.BookInfo">
        update bookinfo
        set book_name = #{bookName,jdbcType=VARCHAR},
            author = #{author,jdbcType=VARCHAR},
            translator = #{translator,jdbcType=VARCHAR},
            price = #{price,jdbcType=DECIMAL},
            isbn_code = #{isbnCode,jdbcType=VARCHAR},
            come_up_time = #{comeUpTime,jdbcType=DATE},
            publish_company = #{publishCompany,jdbcType=VARCHAR},
            state = #{state,jdbcType=INTEGER},
            entering_men = #{enteringMen,jdbcType=VARCHAR},
            entering_date = #{enteringDate,jdbcType=DATE} where book_id = #{bookId,jdbcType=VARCHAR}
    </update>
    <update id="updateStateToReced" parameterType="string">
        update bookinfo
        set
            state = 0 where book_id = #{bookId,jdbcType=VARCHAR}
    </update>
    <update id="updateStateToUnReced" parameterType="string">
        update bookinfo
        set
            state = 1 where book_id = #{bookId,jdbcType=VARCHAR}
    </update>
    <select id="countBySearch" parameterType="string" resultType="integer">
        SELECT
        count(*)
        FROM
        bookinfo
        <if test="content != null">
            WHERE CONCAT(bookinfo.book_id,
            bookinfo.book_name,
            bookinfo.author,
            bookinfo.price,
            bookinfo.isbn_code,
            bookinfo.come_up_time,
            bookinfo.publish_company,
            bookinfo.state,
            bookinfo.entering_men,
            bookinfo.entering_date)
            LIKE '%${content}%'
        </if>
    </select>
    <select id="selectBySearch" parameterType="cn.cqut.bookmangement.entity.BookInfoExample" resultMap="BaseResultMap">
        select 'false' as QUERYID,
        <include refid="Base_Column_List"/>
        FROM
        bookinfo
        <if test="content != null">
            WHERE CONCAT(bookinfo.book_id,
            bookinfo.book_name,
            bookinfo.author,
            bookinfo.price,
            bookinfo.isbn_code,
            bookinfo.come_up_time,
            bookinfo.publish_company,
            bookinfo.state,
            bookinfo.entering_men,
            bookinfo.entering_date)
            LIKE '%${content}%'
        </if>
        LIMIT ${example.start},${example.pageSize}
    </select>


    <select id="countBySearchByBookName" parameterType="string" resultType="integer">
        SELECT
        count(*)
        FROM
        (select 'false' as QUERYID,
        bookinfo.book_name,
        bookinfo.author,
        bookinfo.publish_company,
        COUNT(book_name) as num
        FROM
        bookinfo
        <if test="content != null">
            WHERE CONCAT(bookinfo.book_id,
            bookinfo.book_name,
            bookinfo.author,
            bookinfo.isbn_code)
            LIKE '%${content}%' AND state=1
        </if>
        <if test="content == null">
            WHERE state =1
        </if>
        GROUP BY book_name) A
    </select>
    <select id="selectBySearchByBookName" parameterType="cn.cqut.bookmangement.entity.BookInfoExample"
            resultType="map">
        select 'false' as QUERYID,
        bookinfo.book_name,
        bookinfo.author,
        bookinfo.publish_company,
        COUNT(book_name) as num
        FROM
        bookinfo
        <if test="content != null">
            WHERE CONCAT(bookinfo.book_id,
            bookinfo.book_name,
            bookinfo.author,
            bookinfo.isbn_code)
            LIKE '%${content}%' AND state=1
        </if>
        <if test="content == null">
            WHERE state =1
        </if>
        GROUP BY book_name
        LIMIT ${example.start},${example.pageSize}
    </select>

</mapper>